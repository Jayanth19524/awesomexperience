{"ast":null,"code":"var _jsxFileName = \"/Users/jayanth/Downloads/awesomexperience/client/src/components/Auth/Auth.js\";\nimport { Avatar, Container, Grid, Paper, TextField, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport React, { useState, Fragment } from 'react';\nimport useStyle from './styles';\nimport Input from './Input';\nimport { Button } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './Icon';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signup, signin } from '../../actions/auth';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  const state = null;\n  const classes = useStyle();\n  const dispatch = useDispatch();\n  const [isSignup, setisSignup] = useState(false);\n  const history = useHistory();\n  const [showPassword, setshowPassword] = useState(false);\n  const [formData, setformData] = useState(initialState);\n\n  const switchMode = () => {\n    setisSignup(previsSignup => !previsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    console.log(res);\n    const result = res.profileObj;\n    const token = res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {}\n  };\n\n  const googleFailure = () => {\n    console.log(\"no\");\n  };\n\n  const handleShowPassword = () => setshowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n\n    if (isSignup) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    }\n  };\n\n  const handleChange = e => {\n    console.log(e.target.name);\n    console.log(e.target.value);\n    setformData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, isSignup ? `sign up` : `sign in`), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    type: showPassword ? 'text' : 'password',\n    handleChange: handleChange,\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, isSignup ? `sign up` : `sign in`), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"565551954008-h9a47mosnsbmq65hnkqta8r8ks5ilsuv.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 166\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 26\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, isSignup ? 'have an account sign-in' : 'dont have an account sign-up'))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/jayanth/Downloads/awesomexperience/client/src/components/Auth/Auth.js"],"names":["Avatar","Container","Grid","Paper","TextField","Typography","LockOutlinedIcon","React","useState","Fragment","useStyle","Input","Button","GoogleLogin","Icon","useDispatch","useHistory","signup","signin","initialState","firstName","lastName","email","password","confirmPassword","Auth","state","classes","dispatch","isSignup","setisSignup","history","showPassword","setshowPassword","formData","setformData","switchMode","previsSignup","handleShowPassword","googleSuccess","res","console","log","result","profileObj","token","tokenId","type","data","push","error","googleFailure","prevShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import { Avatar,Container, Grid, Paper, TextField, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport React,{useState, Fragment} from 'react';\nimport useStyle from './styles';\nimport Input from './Input';\nimport { Button } from '@material-ui/core';\nimport {GoogleLogin } from 'react-google-login';\nimport Icon from './Icon';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { signup,signin } from '../../actions/auth';\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\nconst Auth = () => {\n    const state = null ;\n    const classes = useStyle();\n    const dispatch = useDispatch(); \n    const [isSignup,setisSignup] = useState(false);\n    const history = useHistory();\n    const [showPassword,setshowPassword]=useState(false);\n     const [formData,setformData]= useState(initialState);\n    const switchMode=()=>{\n        \n        setisSignup((previsSignup)=>!previsSignup);\n        handleShowPassword(false);\n    };\n    const googleSuccess = async (res) => {\n            console.log(res);\n            const result = res.profileObj;\n            const token = res.tokenId;\n\n            try {\n                dispatch({type:'AUTH',data:{result,token}});\n                history.push('/')\n            } catch (error) {\n                \n            }\n           \n    }\n    const googleFailure = () => {\n            console.log(\"no\");\n    }\n    const handleShowPassword = () => setshowPassword((prevShowPassword)=>!prevShowPassword);\n   \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(formData);\n        if(isSignup){\n            dispatch(signup(formData,history));\n        }\n        else{\n            dispatch(signin(formData,history));\n        }\n\n    }\n    const handleChange = (e) => {\n        console.log(e.target.name);\n        console.log(e.target.value);\n        setformData({...formData,[e.target.name]:e.target.value})\n    }\n    return (\n       <Container component=\"main\" maxWidth=\"xs\">\n           <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon></LockOutlinedIcon>\n                </Avatar>\n                <Typography variant=\"h5\">{isSignup?`sign up`:`sign in`}</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                    {isSignup&&(\n                        <Fragment>\n                            <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                            <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                        </Fragment>\n                    )}\n                    \n                    <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                    <Input name=\"password\" label=\"Password\" type={showPassword?'text':'password'} handleChange={handleChange} handleShowPassword={handleShowPassword}/>\n                    {isSignup&&<Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\"/>}\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        {isSignup?`sign up`:`sign in`}\n                    </Button>\n                    <GoogleLogin \n                     clientId=\"565551954008-h9a47mosnsbmq65hnkqta8r8ks5ilsuv.apps.googleusercontent.com\"\n                     render={(renderProps)=>(\n                         <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />}  variant=\"contained\">\n                             Google Sign In</Button>\n                     )}\n                     onSuccess={googleSuccess}\n                     onFailure={googleFailure}\n                     cookiePolicy=\"single_host_origin\"\n                    />\n                    <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Button onClick={switchMode}>\n                                    {isSignup?'have an account sign-in':'dont have an account sign-up'}\n                                </Button>\n                            </Grid>\n                    </Grid>\n                     \n                </form>\n           </Paper>\n       </Container>\n    )\n}\nexport default Auth;"]},"metadata":{},"sourceType":"module"}