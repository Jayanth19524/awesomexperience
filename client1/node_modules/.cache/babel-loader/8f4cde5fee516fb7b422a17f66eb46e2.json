{"ast":null,"code":"// a reducer is a function that accepts the state and action\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case 'LIKE':\n      console.log('like');\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case 'DELETE':\n      return posts.filter(post => post._id !== action.payload);\n\n    case 'UPDATE':\n      console.log('update');\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case 'FETCH_ALL':\n      console.log(\"fetch\");\n      return action.payload;\n\n    case 'CREATE':\n      console.log('post');\n      return [...posts, action.payload];\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/jayanth/Downloads/awesomexperience/client/src/reducers/posts.js"],"names":["posts","action","type","console","log","map","post","_id","payload","filter"],"mappings":"AACA;AACA,gBAAe,CAACA,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAqB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAOJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAQA,IAAI,CAACC,GAAL,KAAWN,MAAM,CAACO,OAAP,CAAeD,GAA1B,GAA8BN,MAAM,CAACO,OAArC,GAA6CF,IAA/D,CAAP;;AACJ,SAAK,QAAL;AACI,aAAON,KAAK,CAACS,MAAN,CAAcH,IAAD,IAAQA,IAAI,CAACC,GAAL,KAAWN,MAAM,CAACO,OAAvC,CAAP;;AACJ,SAAK,QAAL;AACIL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAOJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAQA,IAAI,CAACC,GAAL,KAAWN,MAAM,CAACO,OAAP,CAAeD,GAA1B,GAA8BN,MAAM,CAACO,OAArC,GAA6CF,IAA/D,CAAP;;AACJ,SAAK,WAAL;AACIH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAOH,MAAM,CAACO,OAAd;;AACJ,SAAK,QAAL;AACIL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,aAAO,CAAC,GAAGJ,KAAJ,EAAUC,MAAM,CAACO,OAAjB,CAAP;;AAEJ;AACI,aAAOR,KAAP;AAjBR;AAqBH,CAtBD","sourcesContent":["\n// a reducer is a function that accepts the state and action\nexport default (posts=[],action) => {\n    switch (action.type){\n        case 'LIKE':\n            console.log('like');\n            return posts.map((post)=>post._id===action.payload._id?action.payload:post);\n        case 'DELETE':\n            return posts.filter((post)=>post._id!==action.payload);\n        case 'UPDATE':\n            console.log('update');\n            return posts.map((post)=>post._id===action.payload._id?action.payload:post);\n        case 'FETCH_ALL':\n            console.log(\"fetch\")\n            return action.payload;\n        case 'CREATE':\n            console.log('post');\n            return [...posts,action.payload];\n\n        default :\n            return posts;\n\n    }\n        \n}"]},"metadata":{},"sourceType":"module"}